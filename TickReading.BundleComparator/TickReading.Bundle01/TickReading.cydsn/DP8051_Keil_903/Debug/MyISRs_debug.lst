C51 COMPILER V9.03   MYISRS_DEBUG                                                          05/04/2015 22:47:50 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE MYISRS_DEBUG
OBJECT MODULE PLACED IN .\DP8051_Keil_903\Debug\MyISRs_debug.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\MyISRs_debug.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_903\Debug\MyISRs_debug.lst) CD DB NOIP OT(2,SIZE) INCDIR(
                    -Generated_Source\PSoC3) OJ(.\DP8051_Keil_903\Debug\MyISRs_debug.obj)

line level    source

   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          /* ============*/
  13          // Constants
  14          #include <cylib.h>
  15          #include "MyISRs.h"
  16          
  17          uint8   ConversionDone =0;      //  Data ready flag
  18          
  19          //__________________________________________________________________________
  20          CY_ISR(ConvDone)                        // Interrupt-Service-Routine definition
  21          {
  22   1              ConversionDone =1;                  // indicate, Data ready
  23   1          CyWdtClear();               // reset the watchdog timer
  24   1      }
  25          
  26          /* [] END OF FILE */
  27          
  28          /*******************************************************************************
  29          * File Name: ConvDone.c  
  30          * Version 1.60
  31          *
  32          *  Description:
  33          *   API for controlling the state of an interrupt.
  34          *
  35          *
  36          *  Note:
  37          *
  38          ********************************************************************************
  39          * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  40          * You may use this file only in accordance with the license, terms, conditions, 
  41          * disclaimers, and limitations in the end user license agreement accompanying 
  42          * the software package with which this file was provided.
  43          ********************************************************************************/
  44          
  45          
  46          #include <CYDEVICE.H>
  47          #include <CYDEVICE_TRM.H>
  48          #include <CYLIB.H>
  49          //#include <ConvDone.H>
  50          
  51          
  52          /*******************************************************************************
  53          *  Place your includes, defines and code here 
C51 COMPILER V9.03   MYISRS_DEBUG                                                          05/04/2015 22:47:50 PAGE 2   

  54          ********************************************************************************/
  55          /* `#START ConvDone_intc` */
  56          
  57          /* `#END` */
  58          
  59          
  60          /*******************************************************************************
  61          * Function Name: ConvDone_Start
  62          ********************************************************************************
  63          * Summary:
  64          *  Set up the interrupt and enable it.
  65          *
  66          * Parameters:  
  67          *   void.
  68          *
  69          *
  70          * Return:
  71          *   void.
  72          *
  73          *******************************************************************************/
  74          void ConvDone_Start(void)
  75          {
  76   1          /* For all we know the interrupt is active. */
  77   1          ConvDone_Disable();
*** WARNING C206 IN LINE 77 OF .\MyISRs_debug.c: 'ConvDone_Disable': missing function-prototype
  78   1      
  79   1          /* Set the ISR to point to the ConvDone Interrupt. */
  80   1          ConvDone_SetVector(ConvDone_Interrupt);
*** ERROR C202 IN LINE 80 OF .\MyISRs_debug.c: 'ConvDone_Interrupt': undefined identifier
  81   1      
  82   1          /* Set the priority. */
  83   1          ConvDone_SetPriority(ISR_ConvDone_INTC_PRIOR_NUMBER);
*** ERROR C202 IN LINE 83 OF .\MyISRs_debug.c: 'ISR_ConvDone__INTC_PRIOR_NUM': undefined identifier
  84   1      
  85   1          /* Enable it. */
  86   1          ConvDone_Enable();
  87   1      }
  88          
  89          /*******************************************************************************
  90          * Function Name: ConvDone_StartEx
  91          ********************************************************************************
  92          * Summary:
  93          *  Set up the interrupt and enable it.
  94          *
  95          * Parameters:  
  96          *   address: Address of the ISR to set in the interrupt vector table.
  97          *
  98          *
  99          * Return:
 100          *   void.
 101          *
 102          *******************************************************************************/
 103          void ConvDone_StartEx(cyisraddress address)
 104          {
 105   1          /* For all we know the interrupt is active. */
 106   1          ConvDone_Disable();
 107   1      
 108   1          /* Set the ISR to point to the ConvDone Interrupt. */
 109   1          ConvDone_SetVector(address);
 110   1      
 111   1          /* Set the priority. */
 112   1          ConvDone_SetPriority(ConvDone_INTC_PRIOR_NUMBER);
C51 COMPILER V9.03   MYISRS_DEBUG                                                          05/04/2015 22:47:50 PAGE 3   

 113   1      
 114   1          /* Enable it. */
 115   1          ConvDone_Enable();
 116   1      }
 117          
 118          /*******************************************************************************
 119          * Function Name: ConvDone_Stop
 120          ********************************************************************************
 121          * Summary:
 122          *   Disables and removes the interrupt.
 123          *
 124          * Parameters:  
 125          *
 126          *
 127          * Return:
 128          *   void.
 129          *
 130          *******************************************************************************/
 131          void ConvDone_Stop(void) 
 132          {
 133   1          /* Disable this interrupt. */
 134   1          ConvDone_Disable();
 135   1      }
 136          
 137          /*******************************************************************************
 138          * Function Name: ConvDone_Interrupt
 139          ********************************************************************************
 140          * Summary:
 141          *   The default Interrupt Service Routine for ConvDone.
 142          *
 143          *   Add custom code between the coments to keep the next version of this file
 144          *   from over writting your code.
 145          *
 146          *
 147          *
 148          * Parameters:  
 149          *
 150          *
 151          * Return:
 152          *   void.
 153          *
 154          *******************************************************************************/
 155          CY_ISR(ConvDone_Interrupt)
 156          {
 157   1          /*  Place your Interrupt code here. */
 158   1          /* `#START ConvDone_Interrupt` */
 159   1      
 160   1          /* `#END` */
 161   1      
 162   1          /* PSoC3 ES1, ES2 RTC ISR PATCH  */ 
 163   1          #if(CYDEV_CHIP_FAMILY_USED == CYDEV_CHIP_FAMILY_PSOC3)
 164   1              #if((CYDEV_CHIP_REVISION_USED <= CYDEV_CHIP_REVISION_3A_ES2) && (ConvDone__ES2_PATCH ))      
*** WARNING C322 IN LINE 164 OF .\MyISRs_debug.c: unknown identifier
                          ConvDone_ISR_PATCH();
                      #endif
 167   1          #endif
 168   1      }
 169          
 170          /*******************************************************************************
 171          * Function Name: ConvDone_SetVector
 172          ********************************************************************************
 173          * Summary:
C51 COMPILER V9.03   MYISRS_DEBUG                                                          05/04/2015 22:47:50 PAGE 4   

 174          *   Change the ISR vector for the Interrupt. Note calling ConvDone_Start
 175          *   will override any effect this method would have had. To set the vector before
 176          *   the component has been started use ConvDone_StartEx instead.
 177          *
 178          *
 179          * Parameters:
 180          *   address: Address of the ISR to set in the interrupt vector table.
 181          *
 182          *
 183          * Return:
 184          *   void.
 185          *
 186          *
 187          *******************************************************************************/
 188          void ConvDone_SetVector(cyisraddress address) 
 189          {
 190   1          CY_SET_REG16(ConvDone_INTC_VECTOR, (uint16) address);
 191   1      }
 192          
 193          /*******************************************************************************
 194          * Function Name: ConvDone_GetVector
 195          ********************************************************************************
 196          * Summary:
 197          *   Gets the "address" of the current ISR vector for the Interrupt.
 198          *
 199          *
 200          * Parameters:
 201          *   void.
 202          *
 203          *
 204          * Return:
 205          *   Address of the ISR in the interrupt vector table.
 206          *
 207          *
 208          *******************************************************************************/
 209          cyisraddress ConvDone_GetVector(void) 
 210          {
 211   1          return (cyisraddress) CY_GET_REG16(ConvDone_INTC_VECTOR);
 212   1      }
 213          
 214          /*******************************************************************************
 215          * Function Name: ConvDone_SetPriority
 216          ********************************************************************************
 217          * Summary:
 218          *   Sets the Priority of the Interrupt. Note calling ConvDone_Start
 219          *   or ConvDone_StartEx will override any effect this method would have had. 
 220          *       This method should only be called after ConvDone_Start or 
 221          *       ConvDone_StartEx has been called. To set the initial
 222          *       priority for the component use the cydwr file in the tool.
 223          *
 224          *
 225          * Parameters:
 226          *   priority: Priority of the interrupt. 0 - 7, 0 being the highest.
 227          *
 228          *
 229          * Return:
 230          *   void.
 231          *
 232          *
 233          *******************************************************************************/
 234          void ConvDone_SetPriority(uint8 priority) 
 235          {
C51 COMPILER V9.03   MYISRS_DEBUG                                                          05/04/2015 22:47:50 PAGE 5   

 236   1          *ConvDone_INTC_PRIOR = priority << 5;
 237   1      }
 238          
 239          /*******************************************************************************
 240          * Function Name: ConvDone_GetPriority
 241          ********************************************************************************
 242          * Summary:
 243          *   Gets the Priority of the Interrupt.
 244          *
 245          *
 246          * Parameters:
 247          *   void.
 248          *
 249          *
 250          * Return:
 251          *   Priority of the interrupt. 0 - 7, 0 being the highest.
 252          *
 253          *
 254          *******************************************************************************/
 255          uint8 ConvDone_GetPriority(void) 
 256          {
 257   1          uint8 priority;
 258   1      
 259   1      
 260   1          priority = *ConvDone_INTC_PRIOR >> 5;
 261   1      
 262   1          return priority;
 263   1      }
 264          
 265          /*******************************************************************************
 266          * Function Name: ConvDone_Enable
 267          ********************************************************************************
 268          * Summary:
 269          *   Enables the interrupt.
 270          *
 271          *
 272          * Parameters:
 273          *   void.
 274          *
 275          *
 276          * Return:
 277          *   void.
 278          *
 279          *
 280          *******************************************************************************/
 281          void ConvDone_Enable(void) 
 282          {
 283   1          /* Enable the general interrupt. */
 284   1          *ConvDone_INTC_SET_EN = ConvDone__INTC_MASK;
 285   1      }
 286          
 287          /*******************************************************************************
 288          * Function Name: ConvDone_GetState
 289          ********************************************************************************
 290          * Summary:
 291          *   Gets the state (enabled, disabled) of the Interrupt.
 292          *
 293          *
 294          * Parameters:
 295          *   void.
 296          *
 297          *
C51 COMPILER V9.03   MYISRS_DEBUG                                                          05/04/2015 22:47:50 PAGE 6   

 298          * Return:
 299          *   1 if enabled, 0 if disabled.
 300          *
 301          *
 302          *******************************************************************************/
 303          uint8 ConvDone_GetState(void) 
 304          {
 305   1          /* Get the state of the general interrupt. */
 306   1          return (*ConvDone_INTC_SET_EN & ConvDone__INTC_MASK) ? 1:0;
 307   1      }
 308          
 309          /*******************************************************************************
 310          * Function Name: ConvDone_Disable
 311          ********************************************************************************
 312          * Summary:
 313          *   Disables the Interrupt.
 314          *
 315          *
 316          * Parameters:
 317          *   void.
 318          *
 319          *
 320          * Return:
 321          *   void.
 322          *
 323          *
 324          *******************************************************************************/
 325          void ConvDone_Disable(void) 
 326          {
 327   1          /* Disable the general interrupt. */
 328   1          *ConvDone_INTC_CLR_EN = ConvDone__INTC_MASK;
 329   1      }
 330          
 331          /*******************************************************************************
 332          * Function Name: ConvDone_SetPending
 333          ********************************************************************************
 334          * Summary:
 335          *   Causes the Interrupt to enter the pending state, a software method of
 336          *   generating the interrupt.
 337          *
 338          *
 339          * Parameters:
 340          *   void.
 341          *
 342          *
 343          * Return:
 344          *   void.
 345          *
 346          *
 347          *******************************************************************************/
 348          void ConvDone_SetPending(void) 
 349          {
 350   1          *ConvDone_INTC_SET_PD = ConvDone__INTC_MASK;
 351   1      }
 352          
 353          /*******************************************************************************
 354          * Function Name: ConvDone_ClearPending
 355          ********************************************************************************
 356          * Summary:
 357          *   Clears a pending interrupt.
 358          *
 359          * Parameters:
C51 COMPILER V9.03   MYISRS_DEBUG                                                          05/04/2015 22:47:50 PAGE 7   

 360          *   void.
 361          *
 362          *
 363          * Return:
 364          *   void.
 365          *
 366          *
 367          *******************************************************************************/
 368          void ConvDone_ClearPending(void) 
 369          {
 370   1          *ConvDone_INTC_CLR_PD = ConvDone__INTC_MASK;
 371   1      }

C51 COMPILATION COMPLETE.  2 WARNING(S),  2 ERROR(S)
