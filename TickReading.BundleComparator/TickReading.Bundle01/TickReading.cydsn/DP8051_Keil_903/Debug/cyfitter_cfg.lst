C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_903\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_903\Debug\cyfitter_cfg.lst) CD DB 
                    -NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051_Keil_903\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 2.1
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2012, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          /* Clock startup error codes                                                   */
  25          #define CYCLOCKSTART_NO_ERROR    0
  26          #define CYCLOCKSTART_XTAL_ERROR  1
  27          #define CYCLOCKSTART_32KHZ_ERROR 2
  28          #define CYCLOCKSTART_PLL_ERROR   3
  29          
  30          /*******************************************************************************
  31          * Function Name: CyClockStartupError
  32          ********************************************************************************
  33          * Summary:
  34          *  If an error is encountered during clock configuration (crystal startup error,
  35          *  PLL lock error, etc) the system will end up here.  Unless reimplemented by 
  36          *  the customer, an infinite loop will be encountered.
  37          *
  38          * Parameters:  
  39          *   void
  40          *
  41          * Return:
  42          *   void
  43          *
  44          *******************************************************************************/
  45          #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
  48          static void CyClockStartupError(uint8 errorCode)
  49          {
  50   1          /* To remove the compiler warning if errorCode not used.                */
  51   1          errorCode = errorCode;
  52   1      
  53   1          /* `#START CyClockStartupError` */
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 2   

  54   1      
  55   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc)    */
  56   1          /* we will end up here to allow the customer to implement something to  */
  57   1          /* deal with the clock condition.                                       */
  58   1      
  59   1          /* `#END` */
  60   1      
  61   1          /* If nothing else, stop here since the clocks have not started         */
  62   1          /* correctly.                                                           */
  63   1          while(1) {}
  64   1      }
  65          
  66          
  67          #undef CYCODE
  68          #undef CYDATA
  69          #undef CYXDATA
  70          #undef CYFAR
  71          #if defined(__C51__) || defined(__CX51__)
  72                  #define CYCODE code
  73                  #define CYDATA data
  74                  #define CYXDATA xdata
  75                  #define CYFAR far
  76          
  77                  #define CYPACKED
  78                  #define CYALIGNED
  79              
  80                  #define CY_CFG_MEMORY_BARRIER()
  81          
  82                  #ifndef CYCONFIGCPY_DECLARED
                              extern void cymemzero(void CYFAR *addr, uint16 size);
                              extern void cyconfigcpy(uint16 size, const void CYFAR *src, void CYFAR *dest) small;
                              extern void cyconfigcpycode(uint16 size, const void CYCODE *src, void CYFAR *dest);
                      #endif
  87          
  88          
  89                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  90                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  91                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  92          #else
                      #error Unsupported toolchain
              #endif
  95          
  96          /* Defines the layout and meaning of each entry in the cfg_memset_list used for clearing registers */
  97          typedef struct {
  98                  void CYFAR *address;
  99                  uint16 size;
 100          } CYPACKED cfg_memset_t;
 101          
 102          /* Defines the layout and meaning of each entry in the cfg_memcpy_list used for initializing registers */
 103          typedef struct {
 104                  void CYFAR *dest;
 105                  const void CYFAR *src;
 106                  uint16 size;
 107          } CYPACKED cfg_memcpy_t;
 108          
 109          /* Contains the regions of memory that must be set to 0 during configuration */
 110          #define CFG_MEMSET_COUNT (sizeof(cfg_memset_list)/sizeof(*cfg_memset_list))
 111          static const cfg_memset_t CYCODE cfg_memset_list [] = {
 112                  /* address, size */
 113                  {(void CYFAR *)(CYREG_TMR0_CFG0), 12},
 114                  {(void CYFAR *)(CYREG_PRT0_DR), 16},
 115                  {(void CYFAR *)(CYREG_PRT3_DR), 16},
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 3   

 116                  {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096},
 117                  {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048},
 118                  {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560},
 119                  {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512},
 120                  {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32},
 121          };
 122          
 123          #define cfg_byte_table ((const void CYFAR *)0x080000)
 124          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 125          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x000807B0)
 126          
 127          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
 128          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x000807B8)
 129          
 130          /* IOPINS0_8 Address: CYREG_PRT15_DM0 Size (bytes): 8 */
 131          #define BS_IOPINS0_8_VAL ((const uint8 CYFAR *)0x000807C0)
 132          
 133          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 134          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x000807C8)
 135          
 136          /* IOPINS0_4 Address: CYREG_PRT4_DM0 Size (bytes): 8 */
 137          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x000807D0)
 138          
 139          /* IOPINS0_5 Address: CYREG_PRT5_DM0 Size (bytes): 8 */
 140          #define BS_IOPINS0_5_VAL ((const uint8 CYFAR *)0x000807D8)
 141          
 142          /* IOPINS0_6 Address: CYREG_PRT6_DM0 Size (bytes): 8 */
 143          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x000807E0)
 144          
 145          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 146          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x000807E8)
 147          
 148          
 149          extern void cfg_write_bytes_code(void CYCODE *table);
 150          extern void cfg_write_bytes(void CYFAR *table);
 151          
 152          /*******************************************************************************
 153          * Function Name: ClockSetup
 154          ********************************************************************************
 155          *
 156          * Summary:
 157          *  Performs the initialization of all of the clocks in the device based on the
 158          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 159          *  clocks and setting the necessary dividers to produce the desired frequency. 
 160          *
 161          * Parameters:
 162          *  void
 163          *
 164          * Return:
 165          *  void
 166          *
 167          *******************************************************************************/
 168          static void ClockSetup(void)
 169          {
 170   1              reg32  timeout;
 171   1              reg32* timeout_p = &timeout;
 172   1              reg8   pllLock;
 173   1      
 174   1      
 175   1              /* Configure Digital Clocks based on settings from Clock DWR */
 176   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x18000C);
 177   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x19001D);
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 4   

 178   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x19001D);
 179   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x19752F);
 180   1      
 181   1              /* Configure Analog Clocks based on settings from Clock DWR */
 182   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL), 4)
             -;
 183   1      
 184   1              /* Configure ILO based on settings from Clock DWR */
 185   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02);
 186   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08);
 187   1      
 188   1              /* Configure IMO based on settings from Clock DWR */
 189   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03);
 190   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8(CYREG_FLSHID_CUST_TABLES_IMO_3MHZ)));
 191   1      
 192   1              /* Configure PLL based on settings from Clock DWR */
 193   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008);
 194   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051);
 195   1              /* Wait up to 250us for the PLL to lock */
 196   1              pllLock = 0;
 197   1              for (timeout = 250 / 10; *timeout_p && (pllLock != 0x03u); timeout--) { 
 198   2                      pllLock = 0x03u & ((pllLock << 1) | ((CY_GET_REG8(CYREG_FASTCLK_PLL_SR) & 0x01u) >> 0));
 199   2                      CyDelayCycles(10 * 48); /* Delay 10us based on 48MHz clock */
 200   2              }
 201   1      
 202   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 203   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100);
 204   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07);
 205   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00);
 206   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48);
 207   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 208   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02);
 209   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04);
 210   1      
 211   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8(CYREG_PM_ACT_CFG2) | 0x0F)));
 212   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8(CYREG_PM_ACT_CFG1) | 0x01)));
 213   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x80)));
 214   1      }
 215          
 216          
 217          /* Analog API Functions */
 218          
 219          /*******************************************************************************
 220          * Function Name: AnalogSetDefault
 221          ********************************************************************************
 222          *
 223          * Summary:
 224          *  Sets up the analog portions of the chip to default values based on chip
 225          *  configuration options from the project.
 226          *
 227          * Parameters:
 228          *  void
 229          *
 230          * Return:
 231          *  void
 232          *
 233          *******************************************************************************/
 234          void AnalogSetDefault(void)
 235          {
 236   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u);
 237   1              CY_SET_REG8(CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 238   1              CY_SET_REG8(CYREG_BG_DFT1, (bg_xover_inl_trim >> 4) & 0x0Fu);
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 5   

 239   1              CY_SET_REG8(CYREG_PRT4_AG, 0x04);
 240   1              CY_SET_REG8(CYREG_PRT5_AG, 0x14);
 241   1              CY_SET_REG8(CYREG_DAC2_SW0, 0x20);
 242   1              CY_SET_REG8(CYREG_DAC3_SW0, 0x20);
 243   1              CY_SET_REG8(CYREG_CMP1_SW0, 0x01);
 244   1              CY_SET_REG8(CYREG_CMP1_SW3, 0x40);
 245   1              CY_SET_REG8(CYREG_CMP2_SW0, 0x40);
 246   1              CY_SET_REG8(CYREG_CMP2_SW4, 0x20);
 247   1              CY_SET_REG8(CYREG_CMP3_SW0, 0x04);
 248   1              CY_SET_REG16(CYREG_CMP3_SW3, 0x2040);
 249   1              CY_SET_REG8(CYREG_DSM0_SW0, 0x01);
 250   1              CY_SET_REG8(CYREG_BUS_SW0, 0x01);
 251   1              CY_SET_REG8(CYREG_PUMP_CR0, 0x44);
 252   1      }
 253          
 254          
 255          /*******************************************************************************
 256          * Function Name: SetAnalogRoutingPumps
 257          ********************************************************************************
 258          *
 259          * Summary:
 260          * Enables or disables the analog pumps feeding analog routing switches.
 261          * Intended to be called at startup, based on the Vdda system configuration;
 262          * may be called during operation when the user informs us that the Vdda voltage crossed the pump threshold
             -.
 263          *
 264          * Parameters:
 265          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 266          *
 267          * Return:
 268          *  void
 269          *
 270          *******************************************************************************/
 271          void SetAnalogRoutingPumps(uint8 enabled)
 272          {
 273   1              uint8 regValue = CY_GET_REG8(CYREG_PUMP_CR0);
 274   1              if (enabled)
 275   1                      regValue |= 0x02;
 276   1              else
 277   1                      regValue &= ~0x02;
 278   1              CY_SET_REG8(CYREG_PUMP_CR0, regValue);
 279   1      }
 280          
 281          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 282          /* Table used to specify registers used to implement ADC_DelSig_AMux */
 283          uint8 CYXDATA * const CYCODE ADC_DelSig_AMux__addrTable[] = {
 284                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 285                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 286          };
 287          
 288          /* Table used to define bit masks used to enable inputs for ADC_DelSig_AMux */
 289          const uint8 CYCODE ADC_DelSig_AMux__maskTable[] = {
 290                  0x40, 
 291                  0x20, 
 292          };
 293          
 294          /*******************************************************************************
 295          * Function Name: ADC_DelSig_AMux_Set
 296          ********************************************************************************
 297          * Summary:
 298          *  This function is used to set a particular channel as active on the AMux.
 299          *
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 6   

 300          * Parameters:  
 301          *   channel - The mux channel input to set as active
 302          *
 303          * Return:
 304          *   void
 305          *
 306          *******************************************************************************/
 307          void ADC_DelSig_AMux_Set(uint8 channel)
 308          {
 309   1              if (channel >= 2)
 310   1                      return;
 311   1              *ADC_DelSig_AMux__addrTable[channel] |= ADC_DelSig_AMux__maskTable[channel];
 312   1      }
 313          
 314          /*******************************************************************************
 315          * Function Name: ADC_DelSig_AMux_Unset
 316          ********************************************************************************
 317          * Summary:
 318          *  This function is used to clear a particular channel from being active on the
 319          *  AMux.
 320          *
 321          * Parameters:  
 322          *   channel - The mux channel input to mark inactive
 323          *
 324          * Return:
 325          *   void
 326          *
 327          *******************************************************************************/
 328          void ADC_DelSig_AMux_Unset(uint8 channel)
 329          {
 330   1              if (channel >= 2)
 331   1                      return;
 332   1              *ADC_DelSig_AMux__addrTable[channel] &= ~ADC_DelSig_AMux__maskTable[channel];
 333   1      }
 334          
 335          
 336          
 337          /*******************************************************************************
 338          * Function Name: cyfitter_cfg
 339          ********************************************************************************
 340          * Summary:
 341          *  This function is called by the start-up code for the selected device. It
 342          *  performs all of the necessary device configuration based on the design
 343          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 344          *  as Clocks and Pins as well as any component configuration that is necessary.
 345          *
 346          * Parameters:  
 347          *   void
 348          *
 349          * Return:
 350          *   void
 351          *
 352          *******************************************************************************/
 353          void cyfitter_cfg(void)
 354          {
 355   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 356   1              CY_SET_XTND_REG8(CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8(CYREG_MLOGIC_DEBUG) | 0x05));
 357   1      
 358   1              {
 359   2                      uint8 CYDATA i;
 360   2      
 361   2                      /* Zero out critical memory blocks before beginning configuration */
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 7   

 362   2                      for (i = 0; i < CFG_MEMSET_COUNT; i++)
 363   2                      {
 364   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 365   3                              CYMEMZERO(ms->address, ms->size);
 366   3                      }
 367   2      
 368   2                      cfg_write_bytes(cfg_byte_table);
 369   2      
 370   2                      /* Perform normal device configuration. Order is not critical for these items. */
 371   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT1_CR), 0x0103);
 372   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT2_CR), 0x0203);
 373   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT3_CR), 0x0303);
 374   2      
 375   2                      /* Enable digital routing */
 376   2                      CY_SET_XTND_REG8(CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL0_BANK_CTL) | 0x02u);
 377   2                      CY_SET_XTND_REG8(CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL1_BANK_CTL) | 0x02u);
 378   2      
 379   2                      /* Enable UDB array */
 380   2                      CY_SET_REG8(CYREG_PM_ACT_CFG0, CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x40u);
 381   2                      CY_SET_REG8(CYREG_PM_AVAIL_CR2, CY_GET_REG8(CYREG_PM_AVAIL_CR2) | 0x10u);
 382   2              }
 383   1      
 384   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 385   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (void CYFAR *)(BS_IOPINS0_1_VAL), 8);
 386   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DM0), (void CYFAR *)(BS_IOPINS0_7_VAL), 8);
 387   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT15_DM0), (void CYFAR *)(BS_IOPINS0_8_VAL), 8);
 388   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (void CYFAR *)(BS_IOPINS0_2_VAL), 8);
 389   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DM0), (void CYFAR *)(BS_IOPINS0_4_VAL), 8);
 390   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT5_DM0), (void CYFAR *)(BS_IOPINS0_5_VAL), 8);
 391   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DM0), (void CYFAR *)(BS_IOPINS0_6_VAL), 8);
 392   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_B0_P1_U1_CFG27), 0x44);
 393   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01);
 394   1      
 395   1              if (CYDEV_CHIP_REV_ACTUAL < 5)
 396   1              {
 397   2                      CY_SET_REG8(CYDEV_MFGCFG_PWRSYS_WAKE_TR2, 0x3A);
 398   2              }
 399   1      
 400   1      
 401   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 402   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xF1 : 0xC0));
 403   1              /* Setup clocks based on selections from Clock DWR */
 404   1              ClockSetup();
 405   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 406   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xB1 : 0x80));
 407   1      
 408   1              /* Perform basic analog initialization to defaults */
 409   1              AnalogSetDefault();
 410   1      
 411   1              /* Configure alternate active mode */
 412   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (void CYFAR *)CYDEV_PM_ACT_BASE, 14);
 413   1              CY_SET_REG8(CYREG_PM_STBY_CFG0, CY_GET_REG8(CYREG_PM_STBY_CFG0) & ~0x02u);      /* Disable CPU */
 414   1      }
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 8   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 48
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 51
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 63
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 168
                                           ; SOURCE LINE # 169
                                           ; SOURCE LINE # 171
0000 7E00        R     MOV     R6,#HIGH timeout
0002 7F00        R     MOV     R7,#LOW timeout
0004 900000      R     MOV     DPTR,#timeout_p
0007 EE                MOV     A,R6
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 176
000C 7B00              MOV     R3,#00H
000E 7A40              MOV     R2,#040H
0010 7980              MOV     R1,#080H
0012 7F0C              MOV     R7,#0CH
0014 7E00              MOV     R6,#00H
0016 7D18              MOV     R5,#018H
0018 7C00              MOV     R4,#00H
001A 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 177
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
0023 7F1D              MOV     R7,#01DH
0025 7E00              MOV     R6,#00H
0027 7D19              MOV     R5,#019H
0029 7C00              MOV     R4,#00H
002B 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 178
002E 7B00              MOV     R3,#00H
0030 7A40              MOV     R2,#040H
0032 7988              MOV     R1,#088H
0034 7F1D              MOV     R7,#01DH
0036 7E00              MOV     R6,#00H
0038 7D19              MOV     R5,#019H
003A 7C00              MOV     R4,#00H
003C 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 179
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 9   

003F 7B00              MOV     R3,#00H
0041 7A40              MOV     R2,#040H
0043 798C              MOV     R1,#08CH
0045 7F2F              MOV     R7,#02FH
0047 7E75              MOV     R6,#075H
0049 7D19              MOV     R5,#019H
004B 7C00              MOV     R4,#00H
004D 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 182
0050 7B08              MOV     R3,#08H
0052 7A07              MOV     R2,#07H
0054 79E8              MOV     R1,#0E8H
0056 C003              PUSH    AR3
0058 C002              PUSH    AR2
005A C001              PUSH    AR1
005C 7B00              MOV     R3,#00H
005E 7A41              MOV     R2,#041H
0060 7900              MOV     R1,#00H
0062 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0065 120000      E     LCALL   ?C?PSTXDATA
0068 D001              POP     AR1
006A D002              POP     AR2
006C D003              POP     AR3
006E 7F04              MOV     R7,#04H
0070 7E00              MOV     R6,#00H
0072 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 185
0075 904300            MOV     DPTR,#04300H
0078 7402              MOV     A,#02H
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 186
007B 904000            MOV     DPTR,#04000H
007E 7408              MOV     A,#08H
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
0081 904200            MOV     DPTR,#04200H
0084 7403              MOV     A,#03H
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
0087 7B0C              MOV     R3,#0CH
0089 7A01              MOV     R2,#01H
008B 7908              MOV     R1,#08H
008D 120000      E     LCALL   _cyread8
0090 9046A1            MOV     DPTR,#046A1H
0093 EF                MOV     A,R7
0094 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
0095 7B00              MOV     R3,#00H
0097 7A42              MOV     R2,#042H
0099 7922              MOV     R1,#022H
009B 7D08              MOV     R5,#08H
009D 7C00              MOV     R4,#00H
009F 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 194
00A2 7B00              MOV     R3,#00H
00A4 7A42              MOV     R2,#042H
00A6 7920              MOV     R1,#020H
00A8 7D51              MOV     R5,#051H
00AA 7C10              MOV     R4,#010H
00AC 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 196
00AF 900000      R     MOV     DPTR,#pllLock
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 10  

00B2 E4                CLR     A
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
00B4 7F19              MOV     R7,#019H
00B6 7E00              MOV     R6,#00H
00B8 7D00              MOV     R5,#00H
00BA 7C00              MOV     R4,#00H
00BC 900000      R     MOV     DPTR,#timeout
00BF 120000      E     LCALL   ?C?LSTXDATA
00C2         ?C0004:
00C2 900000      R     MOV     DPTR,#timeout_p
00C5 E0                MOVX    A,@DPTR
00C6 FE                MOV     R6,A
00C7 A3                INC     DPTR
00C8 E0                MOVX    A,@DPTR
00C9 FF                MOV     R7,A
00CA 8F82              MOV     DPL,R7
00CC 8E83              MOV     DPH,R6
00CE 120000      E     LCALL   ?C?LLDXDATA
00D1 EC                MOV     A,R4
00D2 4D                ORL     A,R5
00D3 4E                ORL     A,R6
00D4 4F                ORL     A,R7
00D5 604E              JZ      ?C0005
00D7 900000      R     MOV     DPTR,#pllLock
00DA E0                MOVX    A,@DPTR
00DB FF                MOV     R7,A
00DC EF                MOV     A,R7
00DD 6403              XRL     A,#03H
00DF 6044              JZ      ?C0005
                                           ; SOURCE LINE # 198
00E1 904225            MOV     DPTR,#04225H
00E4 E0                MOVX    A,@DPTR
00E5 FF                MOV     R7,A
00E6 EF                MOV     A,R7
00E7 5401              ANL     A,#01H
00E9 FF                MOV     R7,A
00EA 7E00              MOV     R6,#00H
00EC 900000      R     MOV     DPTR,#pllLock
00EF E0                MOVX    A,@DPTR
00F0 FE                MOV     R6,A
00F1 EE                MOV     A,R6
00F2 25E0              ADD     A,ACC
00F4 FE                MOV     R6,A
00F5 EE                MOV     A,R6
00F6 4F                ORL     A,R7
00F7 FF                MOV     R7,A
00F8 EF                MOV     A,R7
00F9 5403              ANL     A,#03H
00FB FF                MOV     R7,A
00FC 900000      R     MOV     DPTR,#pllLock
00FF EF                MOV     A,R7
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
0101 7FE0              MOV     R7,#0E0H
0103 7E01              MOV     R6,#01H
0105 7D00              MOV     R5,#00H
0107 7C00              MOV     R4,#00H
0109 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 200
010C 900000      R     MOV     DPTR,#timeout
010F 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 11  

0112 7BFF              MOV     R3,#0FFH
0114 7AFF              MOV     R2,#0FFH
0116 79FF              MOV     R1,#0FFH
0118 78FF              MOV     R0,#0FFH
011A 120000      E     LCALL   ?C?LADD
011D 900000      R     MOV     DPTR,#timeout
0120 120000      E     LCALL   ?C?LSTXDATA
0123 809D              SJMP    ?C0004
0125         ?C0005:
                                           ; SOURCE LINE # 203
0125 7B00              MOV     R3,#00H
0127 7A40              MOV     R2,#040H
0129 7904              MOV     R1,#04H
012B 7D00              MOV     R5,#00H
012D 7C01              MOV     R4,#01H
012F 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 204
0132 904004            MOV     DPTR,#04004H
0135 7407              MOV     A,#07H
0137 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
0138 904006            MOV     DPTR,#04006H
013B E4                CLR     A
013C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
013D 904008            MOV     DPTR,#04008H
0140 7448              MOV     A,#048H
0142 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
0143 904004            MOV     DPTR,#04004H
0146 E4                CLR     A
0147 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
0148 904001            MOV     DPTR,#04001H
014B 7402              MOV     A,#02H
014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 209
014E 90400B            MOV     DPTR,#0400BH
0151 7404              MOV     A,#04H
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 211
0154 9043A2            MOV     DPTR,#043A2H
0157 E0                MOVX    A,@DPTR
0158 FF                MOV     R7,A
0159 EF                MOV     A,R7
015A 440F              ORL     A,#0FH
015C FF                MOV     R7,A
015D EF                MOV     A,R7
015E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 212
015F 9043A1            MOV     DPTR,#043A1H
0162 E0                MOVX    A,@DPTR
0163 FF                MOV     R7,A
0164 EF                MOV     A,R7
0165 4401              ORL     A,#01H
0167 FF                MOV     R7,A
0168 EF                MOV     A,R7
0169 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 213
016A 9043A0            MOV     DPTR,#043A0H
016D E0                MOVX    A,@DPTR
016E FF                MOV     R7,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 12  

016F EF                MOV     A,R7
0170 4480              ORL     A,#080H
0172 FF                MOV     R7,A
0173 EF                MOV     A,R7
0174 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
0175 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 237
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 239
002F 90514D            MOV     DPTR,#0514DH
0032 7404              MOV     A,#04H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 240
0035 90515D            MOV     DPTR,#0515DH
0038 7414              MOV     A,#014H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 241
003B 905A90            MOV     DPTR,#05A90H
003E 7420              MOV     A,#020H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 242
0041 905A98            MOV     DPTR,#05A98H
0044 7420              MOV     A,#020H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
0047 905AC8            MOV     DPTR,#05AC8H
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 13  

004A 7401              MOV     A,#01H
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 244
004D 905ACB            MOV     DPTR,#05ACBH
0050 7440              MOV     A,#040H
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 245
0053 905AD0            MOV     DPTR,#05AD0H
0056 7440              MOV     A,#040H
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 246
0059 905AD4            MOV     DPTR,#05AD4H
005C 7420              MOV     A,#020H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
005F 905AD8            MOV     DPTR,#05AD8H
0062 7404              MOV     A,#04H
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 248
0065 7B02              MOV     R3,#02H
0067 7A5A              MOV     R2,#05AH
0069 79DB              MOV     R1,#0DBH
006B 7D40              MOV     R5,#040H
006D 7C20              MOV     R4,#020H
006F 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 249
0072 905B00            MOV     DPTR,#05B00H
0075 7401              MOV     A,#01H
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 250
0078 905B58            MOV     DPTR,#05B58H
007B 7401              MOV     A,#01H
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 251
007E 905876            MOV     DPTR,#05876H
0081 7444              MOV     A,#044H
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 252
0084 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 271
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 272
                                           ; SOURCE LINE # 273
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 274
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0009
                                           ; SOURCE LINE # 275
0017 900000      R     MOV     DPTR,#regValue
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 14  

001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4402              ORL     A,#02H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
0025 800E              SJMP    ?C0010
0027         ?C0009:
                                           ; SOURCE LINE # 277
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FD              ANL     A,#0FDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
0035         ?C0010:
                                           ; SOURCE LINE # 278
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 279
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_DelSig_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 307
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0013
0010         ?C0012:
                                           ; SOURCE LINE # 311
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_DelSig_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_DelSig_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 15  

0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_DelSig_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 312
0046         ?C0013:
0046 22                RET     
             ; FUNCTION _ADC_DelSig_AMux_Set (END)

             ; FUNCTION _ADC_DelSig_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 328
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 329
                                           ; SOURCE LINE # 330
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0015
0010         ?C0014:
                                           ; SOURCE LINE # 332
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_DelSig_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_DelSig_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 16  

002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_DelSig_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 333
0049         ?C0015:
0049 22                RET     
             ; FUNCTION _ADC_DelSig_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 353
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 356
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 358
                                           ; SOURCE LINE # 362
0016 750000      R     MOV     i,#00H
0019         ?C0016:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9408              SUBB    A,#08H
001E 503A              JNC     ?C0017
                                           ; SOURCE LINE # 363
                                           ; SOURCE LINE # 364
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 17  

0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 365
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 366
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0016
005A         ?C0017:
                                           ; SOURCE LINE # 368
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 371
0063 7B00              MOV     R3,#00H
0065 7A58              MOV     R2,#058H
0067 794A              MOV     R1,#04AH
0069 7D03              MOV     R5,#03H
006B 7C01              MOV     R4,#01H
006D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 372
0070 7B00              MOV     R3,#00H
0072 7A58              MOV     R2,#058H
0074 794C              MOV     R1,#04CH
0076 7D03              MOV     R5,#03H
0078 7C02              MOV     R4,#02H
007A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 373
007D 7B00              MOV     R3,#00H
007F 7A58              MOV     R2,#058H
0081 794E              MOV     R1,#04EH
0083 7D03              MOV     R5,#03H
0085 7C03              MOV     R4,#03H
0087 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 376
008A 7B01              MOV     R3,#01H
008C 7A50              MOV     R2,#050H
008E 7903              MOV     R1,#03H
0090 120000      E     LCALL   _cyread8
0093 EF                MOV     A,R7
0094 4402              ORL     A,#02H
0096 FD                MOV     R5,A
0097 7B01              MOV     R3,#01H
0099 7A50              MOV     R2,#050H
009B 7903              MOV     R1,#03H
009D 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 377
00A0 7B01              MOV     R3,#01H
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 18  

00A2 7A50              MOV     R2,#050H
00A4 7913              MOV     R1,#013H
00A6 120000      E     LCALL   _cyread8
00A9 EF                MOV     A,R7
00AA 4402              ORL     A,#02H
00AC FD                MOV     R5,A
00AD 7B01              MOV     R3,#01H
00AF 7A50              MOV     R2,#050H
00B1 7913              MOV     R1,#013H
00B3 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 380
00B6 9043A0            MOV     DPTR,#043A0H
00B9 E0                MOVX    A,@DPTR
00BA FF                MOV     R7,A
00BB EF                MOV     A,R7
00BC 4440              ORL     A,#040H
00BE FF                MOV     R7,A
00BF 9043A0            MOV     DPTR,#043A0H
00C2 EF                MOV     A,R7
00C3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 381
00C4 9043C2            MOV     DPTR,#043C2H
00C7 E0                MOVX    A,@DPTR
00C8 FF                MOV     R7,A
00C9 EF                MOV     A,R7
00CA 4410              ORL     A,#010H
00CC FF                MOV     R7,A
00CD 9043C2            MOV     DPTR,#043C2H
00D0 EF                MOV     A,R7
00D1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 382
                                           ; SOURCE LINE # 385
00D2 7B08              MOV     R3,#08H
00D4 7A07              MOV     R2,#07H
00D6 79B0              MOV     R1,#0B0H
00D8 C003              PUSH    AR3
00DA C002              PUSH    AR2
00DC C001              PUSH    AR1
00DE 7B00              MOV     R3,#00H
00E0 7A51              MOV     R2,#051H
00E2 7912              MOV     R1,#012H
00E4 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E7 120000      E     LCALL   ?C?PSTXDATA
00EA D001              POP     AR1
00EC D002              POP     AR2
00EE D003              POP     AR3
00F0 7F08              MOV     R7,#08H
00F2 7E00              MOV     R6,#00H
00F4 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 386
00F7 7B08              MOV     R3,#08H
00F9 7A07              MOV     R2,#07H
00FB 79B8              MOV     R1,#0B8H
00FD C003              PUSH    AR3
00FF C002              PUSH    AR2
0101 C001              PUSH    AR1
0103 7B00              MOV     R3,#00H
0105 7A51              MOV     R2,#051H
0107 79C2              MOV     R1,#0C2H
0109 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
010C 120000      E     LCALL   ?C?PSTXDATA
010F D001              POP     AR1
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 19  

0111 D002              POP     AR2
0113 D003              POP     AR3
0115 7F08              MOV     R7,#08H
0117 7E00              MOV     R6,#00H
0119 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 387
011C 7B08              MOV     R3,#08H
011E 7A07              MOV     R2,#07H
0120 79C0              MOV     R1,#0C0H
0122 C003              PUSH    AR3
0124 C002              PUSH    AR2
0126 C001              PUSH    AR1
0128 7B00              MOV     R3,#00H
012A 7A51              MOV     R2,#051H
012C 79F2              MOV     R1,#0F2H
012E 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0131 120000      E     LCALL   ?C?PSTXDATA
0134 D001              POP     AR1
0136 D002              POP     AR2
0138 D003              POP     AR3
013A 7F08              MOV     R7,#08H
013C 7E00              MOV     R6,#00H
013E 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 388
0141 7B08              MOV     R3,#08H
0143 7A07              MOV     R2,#07H
0145 79C8              MOV     R1,#0C8H
0147 C003              PUSH    AR3
0149 C002              PUSH    AR2
014B C001              PUSH    AR1
014D 7B00              MOV     R3,#00H
014F 7A51              MOV     R2,#051H
0151 7922              MOV     R1,#022H
0153 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0156 120000      E     LCALL   ?C?PSTXDATA
0159 D001              POP     AR1
015B D002              POP     AR2
015D D003              POP     AR3
015F 7F08              MOV     R7,#08H
0161 7E00              MOV     R6,#00H
0163 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 389
0166 7B08              MOV     R3,#08H
0168 7A07              MOV     R2,#07H
016A 79D0              MOV     R1,#0D0H
016C C003              PUSH    AR3
016E C002              PUSH    AR2
0170 C001              PUSH    AR1
0172 7B00              MOV     R3,#00H
0174 7A51              MOV     R2,#051H
0176 7942              MOV     R1,#042H
0178 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
017B 120000      E     LCALL   ?C?PSTXDATA
017E D001              POP     AR1
0180 D002              POP     AR2
0182 D003              POP     AR3
0184 7F08              MOV     R7,#08H
0186 7E00              MOV     R6,#00H
0188 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 390
018B 7B08              MOV     R3,#08H
018D 7A07              MOV     R2,#07H
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 20  

018F 79D8              MOV     R1,#0D8H
0191 C003              PUSH    AR3
0193 C002              PUSH    AR2
0195 C001              PUSH    AR1
0197 7B00              MOV     R3,#00H
0199 7A51              MOV     R2,#051H
019B 7952              MOV     R1,#052H
019D 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01A0 120000      E     LCALL   ?C?PSTXDATA
01A3 D001              POP     AR1
01A5 D002              POP     AR2
01A7 D003              POP     AR3
01A9 7F08              MOV     R7,#08H
01AB 7E00              MOV     R6,#00H
01AD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 391
01B0 7B08              MOV     R3,#08H
01B2 7A07              MOV     R2,#07H
01B4 79E0              MOV     R1,#0E0H
01B6 C003              PUSH    AR3
01B8 C002              PUSH    AR2
01BA C001              PUSH    AR1
01BC 7B00              MOV     R3,#00H
01BE 7A51              MOV     R2,#051H
01C0 7962              MOV     R1,#062H
01C2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01C5 120000      E     LCALL   ?C?PSTXDATA
01C8 D001              POP     AR1
01CA D002              POP     AR2
01CC D003              POP     AR3
01CE 7F08              MOV     R7,#08H
01D0 7E00              MOV     R6,#00H
01D2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 392
01D5 7B01              MOV     R3,#01H
01D7 7A02              MOV     R2,#02H
01D9 79DB              MOV     R1,#0DBH
01DB 7D44              MOV     R5,#044H
01DD 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 393
01E0 9044F4            MOV     DPTR,#044F4H
01E3 7401              MOV     A,#01H
01E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 395
01E6 9046EC            MOV     DPTR,#046ECH
01E9 E0                MOVX    A,@DPTR
01EA FF                MOV     R7,A
01EB EF                MOV     A,R7
01EC C3                CLR     C
01ED 9405              SUBB    A,#05H
01EF 5006              JNC     ?C0019
                                           ; SOURCE LINE # 396
                                           ; SOURCE LINE # 397
01F1 904689            MOV     DPTR,#04689H
01F4 743A              MOV     A,#03AH
01F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 398
01F7         ?C0019:
                                           ; SOURCE LINE # 402
01F7 904800            MOV     DPTR,#04800H
01FA 74F1              MOV     A,#0F1H
01FC F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          04/28/2015 04:56:15 PAGE 21  

                                           ; SOURCE LINE # 404
01FD 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 406
0200 904800            MOV     DPTR,#04800H
0203 74B1              MOV     A,#0B1H
0205 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 409
0206 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 412
0209 7B00              MOV     R3,#00H
020B 7A43              MOV     R2,#043H
020D 79A0              MOV     R1,#0A0H
020F C003              PUSH    AR3
0211 C002              PUSH    AR2
0213 C001              PUSH    AR1
0215 7B00              MOV     R3,#00H
0217 7A43              MOV     R2,#043H
0219 79B0              MOV     R1,#0B0H
021B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
021E 120000      E     LCALL   ?C?PSTXDATA
0221 D001              POP     AR1
0223 D002              POP     AR2
0225 D003              POP     AR3
0227 7F0E              MOV     R7,#0EH
0229 7E00              MOV     R6,#00H
022B 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 413
022E 9043B0            MOV     DPTR,#043B0H
0231 E0                MOVX    A,@DPTR
0232 FF                MOV     R7,A
0233 EF                MOV     A,R7
0234 54FD              ANL     A,#0FDH
0236 FF                MOV     R7,A
0237 9043B0            MOV     DPTR,#043B0H
023A EF                MOV     A,R7
023B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 414
023C 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1307    ----
   CONSTANT SIZE    =     46    ----
   XDATA SIZE       =   ----      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
