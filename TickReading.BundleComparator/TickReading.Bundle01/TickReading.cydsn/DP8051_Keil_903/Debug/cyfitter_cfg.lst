C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051_Keil_903\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\2.1\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_903\Debug\cyfitter_cfg.lst) CD DB 
                    -NOIP OT(2,SIZE) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051_Keil_903\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 2.1
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2012, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          /* Clock startup error codes                                                   */
  25          #define CYCLOCKSTART_NO_ERROR    0
  26          #define CYCLOCKSTART_XTAL_ERROR  1
  27          #define CYCLOCKSTART_32KHZ_ERROR 2
  28          #define CYCLOCKSTART_PLL_ERROR   3
  29          
  30          /*******************************************************************************
  31          * Function Name: CyClockStartupError
  32          ********************************************************************************
  33          * Summary:
  34          *  If an error is encountered during clock configuration (crystal startup error,
  35          *  PLL lock error, etc) the system will end up here.  Unless reimplemented by 
  36          *  the customer, an infinite loop will be encountered.
  37          *
  38          * Parameters:  
  39          *   void
  40          *
  41          * Return:
  42          *   void
  43          *
  44          *******************************************************************************/
  45          #if defined(__GNUC__) || defined(__ARMCC_VERSION)
              __attribute__ ((unused))
              #endif
  48          static void CyClockStartupError(uint8 errorCode)
  49          {
  50   1          /* To remove the compiler warning if errorCode not used.                */
  51   1          errorCode = errorCode;
  52   1      
  53   1          /* `#START CyClockStartupError` */
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 2   

  54   1      
  55   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc)    */
  56   1          /* we will end up here to allow the customer to implement something to  */
  57   1          /* deal with the clock condition.                                       */
  58   1      
  59   1          /* `#END` */
  60   1      
  61   1          /* If nothing else, stop here since the clocks have not started         */
  62   1          /* correctly.                                                           */
  63   1          while(1) {}
  64   1      }
  65          
  66          
  67          #undef CYCODE
  68          #undef CYDATA
  69          #undef CYXDATA
  70          #undef CYFAR
  71          #if defined(__C51__) || defined(__CX51__)
  72                  #define CYCODE code
  73                  #define CYDATA data
  74                  #define CYXDATA xdata
  75                  #define CYFAR far
  76          
  77                  #define CYPACKED
  78                  #define CYALIGNED
  79              
  80                  #define CY_CFG_MEMORY_BARRIER()
  81          
  82                  #ifndef CYCONFIGCPY_DECLARED
                              extern void cymemzero(void CYFAR *addr, uint16 size);
                              extern void cyconfigcpy(uint16 size, const void CYFAR *src, void CYFAR *dest) small;
                              extern void cyconfigcpycode(uint16 size, const void CYCODE *src, void CYFAR *dest);
                      #endif
  87          
  88          
  89                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  90                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  91                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  92          #else
                      #error Unsupported toolchain
              #endif
  95          
  96          /* Defines the layout and meaning of each entry in the cfg_memset_list used for clearing registers */
  97          typedef struct {
  98                  void CYFAR *address;
  99                  uint16 size;
 100          } CYPACKED cfg_memset_t;
 101          
 102          /* Defines the layout and meaning of each entry in the cfg_memcpy_list used for initializing registers */
 103          typedef struct {
 104                  void CYFAR *dest;
 105                  const void CYFAR *src;
 106                  uint16 size;
 107          } CYPACKED cfg_memcpy_t;
 108          
 109          /* Contains the regions of memory that must be set to 0 during configuration */
 110          #define CFG_MEMSET_COUNT (sizeof(cfg_memset_list)/sizeof(*cfg_memset_list))
 111          static const cfg_memset_t CYCODE cfg_memset_list [] = {
 112                  /* address, size */
 113                  {(void CYFAR *)(CYREG_I2C_XCFG), 21},
 114                  {(void CYFAR *)(CYREG_TMR0_CFG0), 24},
 115                  {(void CYFAR *)(CYREG_PRT0_DR), 16},
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 3   

 116                  {(void CYFAR *)(CYREG_PRT3_DR), 16},
 117                  {(void CYFAR *)(CYREG_PRT15_DR), 16},
 118                  {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 128},
 119                  {(void CYFAR *)(CYDEV_UCFG_B0_P0_ROUTE_BASE), 3840},
 120                  {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048},
 121                  {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560},
 122                  {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512},
 123                  {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32},
 124          };
 125          
 126          #define cfg_byte_table ((const void CYFAR *)0x080000)
 127          /* IDMUX_IRQ Address: CYREG_IDMUX_IRQ_CTL0 Size (bytes): 8 */
 128          #define BS_IDMUX_IRQ_VAL ((const uint8 CYFAR *)0x0008075C)
 129          
 130          /* UDB_1_5_1_CONFIG Address: CYDEV_UCFG_B0_P0_U1_BASE Size (bytes): 128 */
 131          #define BS_UDB_1_5_1_CONFIG_VAL ((const uint8 CYFAR *)0x00080764)
 132          
 133          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
 134          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x000807E4)
 135          
 136          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
 137          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x000807EC)
 138          
 139          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 140          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x000807F4)
 141          
 142          /* IOPINS0_4 Address: CYREG_PRT4_DM0 Size (bytes): 8 */
 143          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x000807FC)
 144          
 145          /* IOPINS0_5 Address: CYREG_PRT5_DM0 Size (bytes): 8 */
 146          #define BS_IOPINS0_5_VAL ((const uint8 CYFAR *)0x00080804)
 147          
 148          /* IOPINS0_6 Address: CYREG_PRT6_DM0 Size (bytes): 8 */
 149          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x0008080C)
 150          
 151          /* CYDEV_CLKDIST_ACFG0_CFG0 Address: CYREG_CLKDIST_ACFG0_CFG0 Size (bytes): 4 */
 152          #define BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL ((const uint8 CYFAR *)0x00080814)
 153          
 154          #define CFG_MEMCPY_COUNT (sizeof(cfg_memcpy_list)/sizeof(*cfg_memcpy_list))
 155          static const cfg_memcpy_t CYCODE cfg_memcpy_list [] = {
 156                  /* dest, src, size */
 157                  {(void CYFAR *)(CYREG_IDMUX_IRQ_CTL0), BS_IDMUX_IRQ_VAL, 8},
 158                  {(void CYFAR *)(CYDEV_UCFG_B0_P0_U1_BASE), BS_UDB_1_5_1_CONFIG_VAL, 128},
 159          };
 160          
 161          
 162          extern void cfg_write_bytes_code(void CYCODE *table);
 163          extern void cfg_write_bytes(void CYFAR *table);
 164          
 165          /*******************************************************************************
 166          * Function Name: ClockSetup
 167          ********************************************************************************
 168          *
 169          * Summary:
 170          *  Performs the initialization of all of the clocks in the device based on the
 171          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 172          *  clocks and setting the necessary dividers to produce the desired frequency. 
 173          *
 174          * Parameters:
 175          *  void
 176          *
 177          * Return:
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 4   

 178          *  void
 179          *
 180          *******************************************************************************/
 181          static void ClockSetup(void)
 182          {
 183   1              reg32  timeout;
 184   1              reg32* timeout_p = &timeout;
 185   1              reg8   pllLock;
 186   1      
 187   1      
 188   1              /* Configure Digital Clocks based on settings from Clock DWR */
 189   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x18000C);
 190   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x19001D);
 191   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x19001D);
 192   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x19752F);
 193   1              CY_SET_XTND_REG24((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x19752F);
 194   1      
 195   1              /* Configure Analog Clocks based on settings from Clock DWR */
 196   1              CYCONFIGCPY((void CYFAR *)(CYREG_CLKDIST_ACFG0_CFG0), (void CYFAR *)(BS_CYDEV_CLKDIST_ACFG0_CFG0_VAL), 4)
             -;
 197   1      
 198   1              /* Configure ILO based on settings from Clock DWR */
 199   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02);
 200   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08);
 201   1      
 202   1              /* Configure IMO based on settings from Clock DWR */
 203   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03);
 204   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8(CYREG_FLSHID_CUST_TABLES_IMO_3MHZ)));
 205   1      
 206   1              /* Configure PLL based on settings from Clock DWR */
 207   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0008);
 208   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1051);
 209   1              /* Wait up to 250us for the PLL to lock */
 210   1              pllLock = 0;
 211   1              for (timeout = 250 / 10; *timeout_p && (pllLock != 0x03u); timeout--) { 
 212   2                      pllLock = 0x03u & ((pllLock << 1) | ((CY_GET_REG8(CYREG_FASTCLK_PLL_SR) & 0x01u) >> 0));
 213   2                      CyDelayCycles(10 * 48); /* Delay 10us based on 48MHz clock */
 214   2              }
 215   1      
 216   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 217   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100);
 218   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07);
 219   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00);
 220   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48);
 221   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00);
 222   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02);
 223   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DLY1), 0x04);
 224   1      
 225   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8(CYREG_PM_ACT_CFG2) | 0x1F)));
 226   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG1), ((CY_GET_REG8(CYREG_PM_ACT_CFG1) | 0x01)));
 227   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG0), ((CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x80)));
 228   1      }
 229          
 230          
 231          /* Analog API Functions */
 232          
 233          /*******************************************************************************
 234          * Function Name: AnalogSetDefault
 235          ********************************************************************************
 236          *
 237          * Summary:
 238          *  Sets up the analog portions of the chip to default values based on chip
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 5   

 239          *  configuration options from the project.
 240          *
 241          * Parameters:
 242          *  void
 243          *
 244          * Return:
 245          *  void
 246          *
 247          *******************************************************************************/
 248          void AnalogSetDefault(void)
 249          {
 250   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u);
 251   1              CY_SET_REG8(CYREG_BG_DFT0, bg_xover_inl_trim & 0x07u);
 252   1              CY_SET_REG8(CYREG_BG_DFT1, (bg_xover_inl_trim >> 4) & 0x0Fu);
 253   1              CY_SET_REG8(CYREG_PRT4_AG, 0x04);
 254   1              CY_SET_REG8(CYREG_PRT5_AG, 0x14);
 255   1              CY_SET_REG8(CYREG_PRT6_AG, 0x01);
 256   1              CY_SET_REG8(CYREG_DAC0_SW0, 0x02);
 257   1              CY_SET_REG8(CYREG_DAC2_SW0, 0x10);
 258   1              CY_SET_REG8(CYREG_DAC3_SW0, 0x20);
 259   1              CY_SET_REG8(CYREG_CMP0_SW0, 0x01);
 260   1              CY_SET_REG8(CYREG_CMP0_SW4, 0x10);
 261   1              CY_SET_REG8(CYREG_CMP1_SW0, 0x01);
 262   1              CY_SET_REG8(CYREG_CMP1_SW3, 0x40);
 263   1              CY_SET_REG8(CYREG_CMP2_SW0, 0x40);
 264   1              CY_SET_REG8(CYREG_CMP2_SW4, 0x02);
 265   1              CY_SET_REG8(CYREG_CMP3_SW0, 0x04);
 266   1              CY_SET_REG16(CYREG_CMP3_SW3, 0x2040);
 267   1              CY_SET_REG8(CYREG_DSM0_SW0, 0x01);
 268   1              CY_SET_REG8(CYREG_PUMP_CR0, 0x44);
 269   1      }
 270          
 271          
 272          /*******************************************************************************
 273          * Function Name: SetAnalogRoutingPumps
 274          ********************************************************************************
 275          *
 276          * Summary:
 277          * Enables or disables the analog pumps feeding analog routing switches.
 278          * Intended to be called at startup, based on the Vdda system configuration;
 279          * may be called during operation when the user informs us that the Vdda voltage crossed the pump threshold
             -.
 280          *
 281          * Parameters:
 282          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 283          *
 284          * Return:
 285          *  void
 286          *
 287          *******************************************************************************/
 288          void SetAnalogRoutingPumps(uint8 enabled)
 289          {
 290   1              uint8 regValue = CY_GET_REG8(CYREG_PUMP_CR0);
 291   1              if (enabled)
 292   1                      regValue |= 0x02;
 293   1              else
 294   1                      regValue &= ~0x02;
 295   1              CY_SET_REG8(CYREG_PUMP_CR0, regValue);
 296   1      }
 297          
 298          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 299          /* Table used to specify registers used to implement ADC_Side_Rangefinder_AMux */
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 6   

 300          uint8 CYXDATA * const CYCODE ADC_Side_Rangefinder_AMux__addrTable[] = {
 301                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 302                  (uint8 CYXDATA *)CYREG_DSM0_SW3, 
 303          };
 304          
 305          /* Table used to define bit masks used to enable inputs for ADC_Side_Rangefinder_AMux */
 306          const uint8 CYCODE ADC_Side_Rangefinder_AMux__maskTable[] = {
 307                  0x40, 
 308                  0x20, 
 309          };
 310          
 311          /*******************************************************************************
 312          * Function Name: ADC_Side_Rangefinder_AMux_Set
 313          ********************************************************************************
 314          * Summary:
 315          *  This function is used to set a particular channel as active on the AMux.
 316          *
 317          * Parameters:  
 318          *   channel - The mux channel input to set as active
 319          *
 320          * Return:
 321          *   void
 322          *
 323          *******************************************************************************/
 324          void ADC_Side_Rangefinder_AMux_Set(uint8 channel)
 325          {
 326   1              if (channel >= 2)
 327   1                      return;
 328   1              *ADC_Side_Rangefinder_AMux__addrTable[channel] |= ADC_Side_Rangefinder_AMux__maskTable[channel];
 329   1      }
 330          
 331          /*******************************************************************************
 332          * Function Name: ADC_Side_Rangefinder_AMux_Unset
 333          ********************************************************************************
 334          * Summary:
 335          *  This function is used to clear a particular channel from being active on the
 336          *  AMux.
 337          *
 338          * Parameters:  
 339          *   channel - The mux channel input to mark inactive
 340          *
 341          * Return:
 342          *   void
 343          *
 344          *******************************************************************************/
 345          void ADC_Side_Rangefinder_AMux_Unset(uint8 channel)
 346          {
 347   1              if (channel >= 2)
 348   1                      return;
 349   1              *ADC_Side_Rangefinder_AMux__addrTable[channel] &= ~ADC_Side_Rangefinder_AMux__maskTable[channel];
 350   1      }
 351          
 352          
 353          
 354          /*******************************************************************************
 355          * Function Name: cyfitter_cfg
 356          ********************************************************************************
 357          * Summary:
 358          *  This function is called by the start-up code for the selected device. It
 359          *  performs all of the necessary device configuration based on the design
 360          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 361          *  as Clocks and Pins as well as any component configuration that is necessary.
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 7   

 362          *
 363          * Parameters:  
 364          *   void
 365          *
 366          * Return:
 367          *   void
 368          *
 369          *******************************************************************************/
 370          void cyfitter_cfg(void)
 371          {
 372   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 373   1              CY_SET_XTND_REG8(CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8(CYREG_MLOGIC_DEBUG) | 0x05));
 374   1      
 375   1              {
 376   2                      uint8 CYDATA i;
 377   2      
 378   2                      /* Zero out critical memory blocks before beginning configuration */
 379   2                      for (i = 0; i < CFG_MEMSET_COUNT; i++)
 380   2                      {
 381   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 382   3                              CYMEMZERO(ms->address, ms->size);
 383   3                      }
 384   2      
 385   2                      /* Copy device configuration data into registers */
 386   2                      for (i = 0; i < CFG_MEMCPY_COUNT; i++)
 387   2                      {
 388   3                              const cfg_memcpy_t CYCODE * CYDATA mc = &cfg_memcpy_list[i];
 389   3                              void * CYDATA dest = mc->dest;
 390   3                              const void * CYDATA src = mc->src;
 391   3                              uint16 CYDATA size = mc->size;
 392   3                              CYCONFIGCPY(dest, src, size);
 393   3                      }
 394   2      
 395   2                      cfg_write_bytes(cfg_byte_table);
 396   2      
 397   2                      /* Perform normal device configuration. Order is not critical for these items. */
 398   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT0_CR), 0x0003);
 399   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT1_CR), 0x0103);
 400   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT2_CR), 0x0203);
 401   2                      CY_SET_XTND_REG16((void CYFAR *)(CYREG_LUT3_CR), 0x0303);
 402   2      
 403   2                      /* Enable digital routing */
 404   2                      CY_SET_XTND_REG8(CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL0_BANK_CTL) | 0x02u);
 405   2                      CY_SET_XTND_REG8(CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8(CYREG_BCTL1_BANK_CTL) | 0x02u);
 406   2      
 407   2                      /* Enable UDB array */
 408   2                      CY_SET_REG8(CYREG_PM_ACT_CFG0, CY_GET_REG8(CYREG_PM_ACT_CFG0) | 0x40u);
 409   2                      CY_SET_REG8(CYREG_PM_AVAIL_CR2, CY_GET_REG8(CYREG_PM_AVAIL_CR2) | 0x10u);
 410   2              }
 411   1      
 412   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 413   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (void CYFAR *)(BS_IOPINS0_1_VAL), 8);
 414   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DM0), (void CYFAR *)(BS_IOPINS0_7_VAL), 8);
 415   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (void CYFAR *)(BS_IOPINS0_2_VAL), 8);
 416   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DM0), (void CYFAR *)(BS_IOPINS0_4_VAL), 8);
 417   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT5_DM0), (void CYFAR *)(BS_IOPINS0_5_VAL), 8);
 418   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DM0), (void CYFAR *)(BS_IOPINS0_6_VAL), 8);
 419   1              CY_SET_XTND_REG8((void CYFAR *)(CYREG_B0_P1_U1_CFG27), 0x84);
 420   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01);
 421   1      
 422   1              if (CYDEV_CHIP_REV_ACTUAL < 5)
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 8   

 423   1              {
 424   2                      CY_SET_REG8(CYDEV_MFGCFG_PWRSYS_WAKE_TR2, 0x3A);
 425   2              }
 426   1      
 427   1      
 428   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 429   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xF1 : 0xC0));
 430   1              /* Setup clocks based on selections from Clock DWR */
 431   1              ClockSetup();
 432   1              /* Set Flash Cycles based on newly configured 24.00MHz Bus Clock. */
 433   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), ((CYDEV_INSTRUCT_CACHE_ENABLED) ? 0xB1 : 0x80));
 434   1      
 435   1              /* Perform basic analog initialization to defaults */
 436   1              AnalogSetDefault();
 437   1      
 438   1              /* Configure alternate active mode */
 439   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (void CYFAR *)CYDEV_PM_ACT_BASE, 14);
 440   1              CY_SET_REG8(CYREG_PM_STBY_CFG0, CY_GET_REG8(CYREG_PM_STBY_CFG0) & ~0x02u);      /* Disable CPU */
 441   1      }
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 9   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 48
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 51
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 63
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 181
                                           ; SOURCE LINE # 182
                                           ; SOURCE LINE # 184
0000 7E00        R     MOV     R6,#HIGH timeout
0002 7F00        R     MOV     R7,#LOW timeout
0004 900000      R     MOV     DPTR,#timeout_p
0007 EE                MOV     A,R6
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
000C 7B00              MOV     R3,#00H
000E 7A40              MOV     R2,#040H
0010 7980              MOV     R1,#080H
0012 7F0C              MOV     R7,#0CH
0014 7E00              MOV     R6,#00H
0016 7D18              MOV     R5,#018H
0018 7C00              MOV     R4,#00H
001A 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 190
001D 7B00              MOV     R3,#00H
001F 7A40              MOV     R2,#040H
0021 7984              MOV     R1,#084H
0023 7F1D              MOV     R7,#01DH
0025 7E00              MOV     R6,#00H
0027 7D19              MOV     R5,#019H
0029 7C00              MOV     R4,#00H
002B 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 191
002E 7B00              MOV     R3,#00H
0030 7A40              MOV     R2,#040H
0032 7988              MOV     R1,#088H
0034 7F1D              MOV     R7,#01DH
0036 7E00              MOV     R6,#00H
0038 7D19              MOV     R5,#019H
003A 7C00              MOV     R4,#00H
003C 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 192
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 10  

003F 7B00              MOV     R3,#00H
0041 7A40              MOV     R2,#040H
0043 798C              MOV     R1,#08CH
0045 7F2F              MOV     R7,#02FH
0047 7E75              MOV     R6,#075H
0049 7D19              MOV     R5,#019H
004B 7C00              MOV     R4,#00H
004D 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 193
0050 7B00              MOV     R3,#00H
0052 7A40              MOV     R2,#040H
0054 7990              MOV     R1,#090H
0056 7F2F              MOV     R7,#02FH
0058 7E75              MOV     R6,#075H
005A 7D19              MOV     R5,#019H
005C 7C00              MOV     R4,#00H
005E 120000      E     LCALL   _cywrite24
                                           ; SOURCE LINE # 196
0061 7B08              MOV     R3,#08H
0063 7A08              MOV     R2,#08H
0065 7914              MOV     R1,#014H
0067 C003              PUSH    AR3
0069 C002              PUSH    AR2
006B C001              PUSH    AR1
006D 7B00              MOV     R3,#00H
006F 7A41              MOV     R2,#041H
0071 7900              MOV     R1,#00H
0073 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0076 120000      E     LCALL   ?C?PSTXDATA
0079 D001              POP     AR1
007B D002              POP     AR2
007D D003              POP     AR3
007F 7F04              MOV     R7,#04H
0081 7E00              MOV     R6,#00H
0083 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 199
0086 904300            MOV     DPTR,#04300H
0089 7402              MOV     A,#02H
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 200
008C 904000            MOV     DPTR,#04000H
008F 7408              MOV     A,#08H
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
0092 904200            MOV     DPTR,#04200H
0095 7403              MOV     A,#03H
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
0098 7B0C              MOV     R3,#0CH
009A 7A01              MOV     R2,#01H
009C 7908              MOV     R1,#08H
009E 120000      E     LCALL   _cyread8
00A1 9046A1            MOV     DPTR,#046A1H
00A4 EF                MOV     A,R7
00A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 207
00A6 7B00              MOV     R3,#00H
00A8 7A42              MOV     R2,#042H
00AA 7922              MOV     R1,#022H
00AC 7D08              MOV     R5,#08H
00AE 7C00              MOV     R4,#00H
00B0 120000      E     LCALL   _cywrite16
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 11  

                                           ; SOURCE LINE # 208
00B3 7B00              MOV     R3,#00H
00B5 7A42              MOV     R2,#042H
00B7 7920              MOV     R1,#020H
00B9 7D51              MOV     R5,#051H
00BB 7C10              MOV     R4,#010H
00BD 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 210
00C0 900000      R     MOV     DPTR,#pllLock
00C3 E4                CLR     A
00C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 211
00C5 7F19              MOV     R7,#019H
00C7 7E00              MOV     R6,#00H
00C9 7D00              MOV     R5,#00H
00CB 7C00              MOV     R4,#00H
00CD 900000      R     MOV     DPTR,#timeout
00D0 120000      E     LCALL   ?C?LSTXDATA
00D3         ?C0004:
00D3 900000      R     MOV     DPTR,#timeout_p
00D6 E0                MOVX    A,@DPTR
00D7 FE                MOV     R6,A
00D8 A3                INC     DPTR
00D9 E0                MOVX    A,@DPTR
00DA FF                MOV     R7,A
00DB 8F82              MOV     DPL,R7
00DD 8E83              MOV     DPH,R6
00DF 120000      E     LCALL   ?C?LLDXDATA
00E2 EC                MOV     A,R4
00E3 4D                ORL     A,R5
00E4 4E                ORL     A,R6
00E5 4F                ORL     A,R7
00E6 604E              JZ      ?C0005
00E8 900000      R     MOV     DPTR,#pllLock
00EB E0                MOVX    A,@DPTR
00EC FF                MOV     R7,A
00ED EF                MOV     A,R7
00EE 6403              XRL     A,#03H
00F0 6044              JZ      ?C0005
                                           ; SOURCE LINE # 212
00F2 904225            MOV     DPTR,#04225H
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 EF                MOV     A,R7
00F8 5401              ANL     A,#01H
00FA FF                MOV     R7,A
00FB 7E00              MOV     R6,#00H
00FD 900000      R     MOV     DPTR,#pllLock
0100 E0                MOVX    A,@DPTR
0101 FE                MOV     R6,A
0102 EE                MOV     A,R6
0103 25E0              ADD     A,ACC
0105 FE                MOV     R6,A
0106 EE                MOV     A,R6
0107 4F                ORL     A,R7
0108 FF                MOV     R7,A
0109 EF                MOV     A,R7
010A 5403              ANL     A,#03H
010C FF                MOV     R7,A
010D 900000      R     MOV     DPTR,#pllLock
0110 EF                MOV     A,R7
0111 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 12  

                                           ; SOURCE LINE # 213
0112 7FE0              MOV     R7,#0E0H
0114 7E01              MOV     R6,#01H
0116 7D00              MOV     R5,#00H
0118 7C00              MOV     R4,#00H
011A 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 214
011D 900000      R     MOV     DPTR,#timeout
0120 120000      E     LCALL   ?C?LLDXDATA
0123 7BFF              MOV     R3,#0FFH
0125 7AFF              MOV     R2,#0FFH
0127 79FF              MOV     R1,#0FFH
0129 78FF              MOV     R0,#0FFH
012B 120000      E     LCALL   ?C?LADD
012E 900000      R     MOV     DPTR,#timeout
0131 120000      E     LCALL   ?C?LSTXDATA
0134 809D              SJMP    ?C0004
0136         ?C0005:
                                           ; SOURCE LINE # 217
0136 7B00              MOV     R3,#00H
0138 7A40              MOV     R2,#040H
013A 7904              MOV     R1,#04H
013C 7D00              MOV     R5,#00H
013E 7C01              MOV     R4,#01H
0140 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 218
0143 904004            MOV     DPTR,#04004H
0146 7407              MOV     A,#07H
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
0149 904006            MOV     DPTR,#04006H
014C E4                CLR     A
014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 220
014E 904008            MOV     DPTR,#04008H
0151 7448              MOV     A,#048H
0153 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0154 904004            MOV     DPTR,#04004H
0157 E4                CLR     A
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
0159 904001            MOV     DPTR,#04001H
015C 7402              MOV     A,#02H
015E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 223
015F 90400B            MOV     DPTR,#0400BH
0162 7404              MOV     A,#04H
0164 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
0165 9043A2            MOV     DPTR,#043A2H
0168 E0                MOVX    A,@DPTR
0169 FF                MOV     R7,A
016A EF                MOV     A,R7
016B 441F              ORL     A,#01FH
016D FF                MOV     R7,A
016E EF                MOV     A,R7
016F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
0170 9043A1            MOV     DPTR,#043A1H
0173 E0                MOVX    A,@DPTR
0174 FF                MOV     R7,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 13  

0175 EF                MOV     A,R7
0176 4401              ORL     A,#01H
0178 FF                MOV     R7,A
0179 EF                MOV     A,R7
017A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 227
017B 9043A0            MOV     DPTR,#043A0H
017E E0                MOVX    A,@DPTR
017F FF                MOV     R7,A
0180 EF                MOV     A,R7
0181 4480              ORL     A,#080H
0183 FF                MOV     R7,A
0184 EF                MOV     A,R7
0185 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 228
0186 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 251
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 252
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 253
002F 90514D            MOV     DPTR,#0514DH
0032 7404              MOV     A,#04H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 254
0035 90515D            MOV     DPTR,#0515DH
0038 7414              MOV     A,#014H
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 255
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 14  

003B 90516D            MOV     DPTR,#0516DH
003E 7401              MOV     A,#01H
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 256
0041 905A80            MOV     DPTR,#05A80H
0044 7402              MOV     A,#02H
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 257
0047 905A90            MOV     DPTR,#05A90H
004A 7410              MOV     A,#010H
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 258
004D 905A98            MOV     DPTR,#05A98H
0050 7420              MOV     A,#020H
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 259
0053 905AC0            MOV     DPTR,#05AC0H
0056 7401              MOV     A,#01H
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 260
0059 905AC4            MOV     DPTR,#05AC4H
005C 7410              MOV     A,#010H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 261
005F 905AC8            MOV     DPTR,#05AC8H
0062 7401              MOV     A,#01H
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 262
0065 905ACB            MOV     DPTR,#05ACBH
0068 7440              MOV     A,#040H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 263
006B 905AD0            MOV     DPTR,#05AD0H
006E 7440              MOV     A,#040H
0070 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 264
0071 905AD4            MOV     DPTR,#05AD4H
0074 7402              MOV     A,#02H
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 265
0077 905AD8            MOV     DPTR,#05AD8H
007A 7404              MOV     A,#04H
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 266
007D 7B02              MOV     R3,#02H
007F 7A5A              MOV     R2,#05AH
0081 79DB              MOV     R1,#0DBH
0083 7D40              MOV     R5,#040H
0085 7C20              MOV     R4,#020H
0087 120000      E     LCALL   _cywrite16_nodpx
                                           ; SOURCE LINE # 267
008A 905B00            MOV     DPTR,#05B00H
008D 7401              MOV     A,#01H
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 268
0090 905876            MOV     DPTR,#05876H
0093 7444              MOV     A,#044H
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
0096 22                RET     
             ; FUNCTION AnalogSetDefault (END)

C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 15  

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 288
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 289
                                           ; SOURCE LINE # 290
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 291
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0009
                                           ; SOURCE LINE # 292
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4402              ORL     A,#02H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
0025 800E              SJMP    ?C0010
0027         ?C0009:
                                           ; SOURCE LINE # 294
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FD              ANL     A,#0FDH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
0035         ?C0010:
                                           ; SOURCE LINE # 295
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION _ADC_Side_Rangefinder_AMux_Set (BEGIN)
                                           ; SOURCE LINE # 324
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 325
                                           ; SOURCE LINE # 326
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 16  

0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5036              JNC     ?C0013
0010         ?C0012:
                                           ; SOURCE LINE # 328
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_Side_Rangefinder_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_Side_Rangefinder_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_Side_Rangefinder_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EF                MOV     A,R7
003E 4E                ORL     A,R6
003F FF                MOV     R7,A
0040 D082              POP     DPL
0042 D083              POP     DPH
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 329
0046         ?C0013:
0046 22                RET     
             ; FUNCTION _ADC_Side_Rangefinder_AMux_Set (END)

             ; FUNCTION _ADC_Side_Rangefinder_AMux_Unset (BEGIN)
                                           ; SOURCE LINE # 345
0000 900000      R     MOV     DPTR,#channel
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 346
                                           ; SOURCE LINE # 347
0005 900000      R     MOV     DPTR,#channel
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B C3                CLR     C
000C 9402              SUBB    A,#02H
000E 5039              JNC     ?C0015
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 17  

0010         ?C0014:
                                           ; SOURCE LINE # 349
0010 900000      R     MOV     DPTR,#channel
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 25E0              ADD     A,ACC
0018 2400        R     ADD     A,#LOW ADC_Side_Rangefinder_AMux__addrTable
001A F582              MOV     DPL,A
001C E4                CLR     A
001D 3400        R     ADDC    A,#HIGH ADC_Side_Rangefinder_AMux__addrTable
001F F583              MOV     DPH,A
0021 E4                CLR     A
0022 93                MOVC    A,@A+DPTR
0023 FE                MOV     R6,A
0024 7401              MOV     A,#01H
0026 93                MOVC    A,@A+DPTR
0027 FF                MOV     R7,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C C083              PUSH    DPH
002E C082              PUSH    DPL
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 900000      R     MOV     DPTR,#channel
0035 E0                MOVX    A,@DPTR
0036 FE                MOV     R6,A
0037 EE                MOV     A,R6
0038 900000      R     MOV     DPTR,#ADC_Side_Rangefinder_AMux__maskTable
003B 93                MOVC    A,@A+DPTR
003C FE                MOV     R6,A
003D EE                MOV     A,R6
003E F4                CPL     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 5E                ANL     A,R6
0042 FF                MOV     R7,A
0043 D082              POP     DPL
0045 D083              POP     DPH
0047 EF                MOV     A,R7
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 350
0049         ?C0015:
0049 22                RET     
             ; FUNCTION _ADC_Side_Rangefinder_AMux_Unset (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 370
                                           ; SOURCE LINE # 371
                                           ; SOURCE LINE # 373
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 375
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 18  

                                           ; SOURCE LINE # 379
0016 750000      R     MOV     i,#00H
0019         ?C0016:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 940B              SUBB    A,#0BH
001E 503A              JNC     ?C0017
                                           ; SOURCE LINE # 380
                                           ; SOURCE LINE # 381
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 382
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 383
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0016
005A         ?C0017:
                                           ; SOURCE LINE # 386
005A 750000      R     MOV     i,#00H
005D         ?C0019:
005D E500        R     MOV     A,i
005F C3                CLR     C
0060 9402              SUBB    A,#02H
0062 5078              JNC     ?C0020
                                           ; SOURCE LINE # 387
                                           ; SOURCE LINE # 388
0064 AF00        R     MOV     R7,i
0066 EF                MOV     A,R7
0067 75F008            MOV     B,#08H
006A A4                MUL     AB
006B 2400        R     ADD     A,#LOW cfg_memcpy_list
006D F582              MOV     DPL,A
006F E4                CLR     A
0070 3400        R     ADDC    A,#HIGH cfg_memcpy_list
0072 F583              MOV     DPH,A
0074 AF82              MOV     R7,DPL
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 19  

0076 AE83              MOV     R6,DPH
0078 8E00        R     MOV     mc,R6
007A 8F00        R     MOV     mc+01H,R7
                                           ; SOURCE LINE # 389
007C AE00        R     MOV     R6,mc
007E AF00        R     MOV     R7,mc+01H
0080 8F82              MOV     DPL,R7
0082 8E83              MOV     DPH,R6
0084 120000      E     LCALL   ?C?PLDCODE
0087 8B00        R     MOV     dest,R3
0089 8A00        R     MOV     dest+01H,R2
008B 8900        R     MOV     dest+02H,R1
                                           ; SOURCE LINE # 390
008D AE00        R     MOV     R6,mc
008F AF00        R     MOV     R7,mc+01H
0091 8F82              MOV     DPL,R7
0093 8E83              MOV     DPH,R6
0095 A3                INC     DPTR
0096 A3                INC     DPTR
0097 A3                INC     DPTR
0098 120000      E     LCALL   ?C?PLDCODE
009B 8B00        R     MOV     src,R3
009D 8A00        R     MOV     src+01H,R2
009F 8900        R     MOV     src+02H,R1
                                           ; SOURCE LINE # 391
00A1 AE00        R     MOV     R6,mc
00A3 AF00        R     MOV     R7,mc+01H
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 7406              MOV     A,#06H
00AB 93                MOVC    A,@A+DPTR
00AC F500        R     MOV     size,A
00AE 7407              MOV     A,#07H
00B0 93                MOVC    A,@A+DPTR
00B1 F500        R     MOV     size+01H,A
                                           ; SOURCE LINE # 392
00B3 AB00        R     MOV     R3,src
00B5 AA00        R     MOV     R2,src+01H
00B7 A900        R     MOV     R1,src+02H
00B9 C003              PUSH    AR3
00BB C002              PUSH    AR2
00BD C001              PUSH    AR1
00BF AB00        R     MOV     R3,dest
00C1 AA00        R     MOV     R2,dest+01H
00C3 A900        R     MOV     R1,dest+02H
00C5 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C8 120000      E     LCALL   ?C?PSTXDATA
00CB D001              POP     AR1
00CD D002              POP     AR2
00CF D003              POP     AR3
00D1 AF00        R     MOV     R7,size+01H
00D3 AE00        R     MOV     R6,size
00D5 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 393
00D8 0500        R     INC     i
00DA 8081              SJMP    ?C0019
00DC         ?C0020:
                                           ; SOURCE LINE # 395
00DC 7B08              MOV     R3,#08H
00DE 7A00              MOV     R2,#00H
00E0 7900              MOV     R1,#00H
00E2 120000      E     LCALL   _cfg_write_bytes
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 20  

                                           ; SOURCE LINE # 398
00E5 7B00              MOV     R3,#00H
00E7 7A58              MOV     R2,#058H
00E9 7948              MOV     R1,#048H
00EB 7D03              MOV     R5,#03H
00ED 7C00              MOV     R4,#00H
00EF 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 399
00F2 7B00              MOV     R3,#00H
00F4 7A58              MOV     R2,#058H
00F6 794A              MOV     R1,#04AH
00F8 7D03              MOV     R5,#03H
00FA 7C01              MOV     R4,#01H
00FC 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 400
00FF 7B00              MOV     R3,#00H
0101 7A58              MOV     R2,#058H
0103 794C              MOV     R1,#04CH
0105 7D03              MOV     R5,#03H
0107 7C02              MOV     R4,#02H
0109 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 401
010C 7B00              MOV     R3,#00H
010E 7A58              MOV     R2,#058H
0110 794E              MOV     R1,#04EH
0112 7D03              MOV     R5,#03H
0114 7C03              MOV     R4,#03H
0116 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 404
0119 7B01              MOV     R3,#01H
011B 7A50              MOV     R2,#050H
011D 7903              MOV     R1,#03H
011F 120000      E     LCALL   _cyread8
0122 EF                MOV     A,R7
0123 4402              ORL     A,#02H
0125 FD                MOV     R5,A
0126 7B01              MOV     R3,#01H
0128 7A50              MOV     R2,#050H
012A 7903              MOV     R1,#03H
012C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 405
012F 7B01              MOV     R3,#01H
0131 7A50              MOV     R2,#050H
0133 7913              MOV     R1,#013H
0135 120000      E     LCALL   _cyread8
0138 EF                MOV     A,R7
0139 4402              ORL     A,#02H
013B FD                MOV     R5,A
013C 7B01              MOV     R3,#01H
013E 7A50              MOV     R2,#050H
0140 7913              MOV     R1,#013H
0142 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 408
0145 9043A0            MOV     DPTR,#043A0H
0148 E0                MOVX    A,@DPTR
0149 FF                MOV     R7,A
014A EF                MOV     A,R7
014B 4440              ORL     A,#040H
014D FF                MOV     R7,A
014E 9043A0            MOV     DPTR,#043A0H
0151 EF                MOV     A,R7
0152 F0                MOVX    @DPTR,A
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 21  

                                           ; SOURCE LINE # 409
0153 9043C2            MOV     DPTR,#043C2H
0156 E0                MOVX    A,@DPTR
0157 FF                MOV     R7,A
0158 EF                MOV     A,R7
0159 4410              ORL     A,#010H
015B FF                MOV     R7,A
015C 9043C2            MOV     DPTR,#043C2H
015F EF                MOV     A,R7
0160 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 410
                                           ; SOURCE LINE # 413
0161 7B08              MOV     R3,#08H
0163 7A07              MOV     R2,#07H
0165 79E4              MOV     R1,#0E4H
0167 C003              PUSH    AR3
0169 C002              PUSH    AR2
016B C001              PUSH    AR1
016D 7B00              MOV     R3,#00H
016F 7A51              MOV     R2,#051H
0171 7912              MOV     R1,#012H
0173 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0176 120000      E     LCALL   ?C?PSTXDATA
0179 D001              POP     AR1
017B D002              POP     AR2
017D D003              POP     AR3
017F 7F08              MOV     R7,#08H
0181 7E00              MOV     R6,#00H
0183 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 414
0186 7B08              MOV     R3,#08H
0188 7A07              MOV     R2,#07H
018A 79EC              MOV     R1,#0ECH
018C C003              PUSH    AR3
018E C002              PUSH    AR2
0190 C001              PUSH    AR1
0192 7B00              MOV     R3,#00H
0194 7A51              MOV     R2,#051H
0196 79C2              MOV     R1,#0C2H
0198 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
019B 120000      E     LCALL   ?C?PSTXDATA
019E D001              POP     AR1
01A0 D002              POP     AR2
01A2 D003              POP     AR3
01A4 7F08              MOV     R7,#08H
01A6 7E00              MOV     R6,#00H
01A8 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 415
01AB 7B08              MOV     R3,#08H
01AD 7A07              MOV     R2,#07H
01AF 79F4              MOV     R1,#0F4H
01B1 C003              PUSH    AR3
01B3 C002              PUSH    AR2
01B5 C001              PUSH    AR1
01B7 7B00              MOV     R3,#00H
01B9 7A51              MOV     R2,#051H
01BB 7922              MOV     R1,#022H
01BD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01C0 120000      E     LCALL   ?C?PSTXDATA
01C3 D001              POP     AR1
01C5 D002              POP     AR2
01C7 D003              POP     AR3
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 22  

01C9 7F08              MOV     R7,#08H
01CB 7E00              MOV     R6,#00H
01CD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 416
01D0 7B08              MOV     R3,#08H
01D2 7A07              MOV     R2,#07H
01D4 79FC              MOV     R1,#0FCH
01D6 C003              PUSH    AR3
01D8 C002              PUSH    AR2
01DA C001              PUSH    AR1
01DC 7B00              MOV     R3,#00H
01DE 7A51              MOV     R2,#051H
01E0 7942              MOV     R1,#042H
01E2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01E5 120000      E     LCALL   ?C?PSTXDATA
01E8 D001              POP     AR1
01EA D002              POP     AR2
01EC D003              POP     AR3
01EE 7F08              MOV     R7,#08H
01F0 7E00              MOV     R6,#00H
01F2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 417
01F5 7B08              MOV     R3,#08H
01F7 7A08              MOV     R2,#08H
01F9 7904              MOV     R1,#04H
01FB C003              PUSH    AR3
01FD C002              PUSH    AR2
01FF C001              PUSH    AR1
0201 7B00              MOV     R3,#00H
0203 7A51              MOV     R2,#051H
0205 7952              MOV     R1,#052H
0207 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
020A 120000      E     LCALL   ?C?PSTXDATA
020D D001              POP     AR1
020F D002              POP     AR2
0211 D003              POP     AR3
0213 7F08              MOV     R7,#08H
0215 7E00              MOV     R6,#00H
0217 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 418
021A 7B08              MOV     R3,#08H
021C 7A08              MOV     R2,#08H
021E 790C              MOV     R1,#0CH
0220 C003              PUSH    AR3
0222 C002              PUSH    AR2
0224 C001              PUSH    AR1
0226 7B00              MOV     R3,#00H
0228 7A51              MOV     R2,#051H
022A 7962              MOV     R1,#062H
022C 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
022F 120000      E     LCALL   ?C?PSTXDATA
0232 D001              POP     AR1
0234 D002              POP     AR2
0236 D003              POP     AR3
0238 7F08              MOV     R7,#08H
023A 7E00              MOV     R6,#00H
023C 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 419
023F 7B01              MOV     R3,#01H
0241 7A02              MOV     R2,#02H
0243 79DB              MOV     R1,#0DBH
0245 7D84              MOV     R5,#084H
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 23  

0247 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 420
024A 9044F4            MOV     DPTR,#044F4H
024D 7401              MOV     A,#01H
024F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 422
0250 9046EC            MOV     DPTR,#046ECH
0253 E0                MOVX    A,@DPTR
0254 FF                MOV     R7,A
0255 EF                MOV     A,R7
0256 C3                CLR     C
0257 9405              SUBB    A,#05H
0259 5006              JNC     ?C0022
                                           ; SOURCE LINE # 423
                                           ; SOURCE LINE # 424
025B 904689            MOV     DPTR,#04689H
025E 743A              MOV     A,#03AH
0260 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 425
0261         ?C0022:
                                           ; SOURCE LINE # 429
0261 904800            MOV     DPTR,#04800H
0264 74F1              MOV     A,#0F1H
0266 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 431
0267 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 433
026A 904800            MOV     DPTR,#04800H
026D 74B1              MOV     A,#0B1H
026F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 436
0270 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 439
0273 7B00              MOV     R3,#00H
0275 7A43              MOV     R2,#043H
0277 79A0              MOV     R1,#0A0H
0279 C003              PUSH    AR3
027B C002              PUSH    AR2
027D C001              PUSH    AR1
027F 7B00              MOV     R3,#00H
0281 7A43              MOV     R2,#043H
0283 79B0              MOV     R1,#0B0H
0285 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0288 120000      E     LCALL   ?C?PSTXDATA
028B D001              POP     AR1
028D D002              POP     AR2
028F D003              POP     AR3
0291 7F0E              MOV     R7,#0EH
0293 7E00              MOV     R6,#00H
0295 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 440
0298 9043B0            MOV     DPTR,#043B0H
029B E0                MOVX    A,@DPTR
029C FF                MOV     R7,A
029D EF                MOV     A,R7
029E 54FD              ANL     A,#0FDH
02A0 FF                MOV     R7,A
02A1 9043B0            MOV     DPTR,#043B0H
02A4 EF                MOV     A,R7
02A5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 441
02A6 22                RET     
C51 COMPILER V9.03   CYFITTER_CFG                                                          05/05/2015 16:29:04 PAGE 24  

             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1448    ----
   CONSTANT SIZE    =     77    ----
   XDATA SIZE       =   ----      13
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
